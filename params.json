{
  "name": "Levelselector",
  "tagline": "简单灵活的多级别选择jQuery插件（Simple and flexible multi-level selection jQuery plugin）",
  "body": "# JQuery 无限级下拉选择插件\r\n\r\n插件主要应对无限级树型结构的数据。比如说国家、省、市、区、县级市、村、街道的选择，还有一些B2B之类的网站无限极分类。无论本地数据还是异步获取这些在后端系统对内容进行归类是常常用到。`jQuery.levelSelector.js` 就是为了解决此问题的。\r\n\r\n![](http://images2015.cnblogs.com/blog/329473/201603/329473-20160324114449058-1763367235.gif)\r\n\r\n## 快速开始\r\n下载[压缩版本][min] 或者 [开发版本][max].\r\n\r\n[min]: /dist/jquery.levelSelector.min.js\r\n[max]: /dist/jquery.levelSelector.js\r\n\r\n### 1. 依赖文件\r\n``` html\r\n<!--引入jquery 1.7 以上的版本-->\r\n<script src=\"jquery.js\"></script>\r\n<!--引入插件-->\r\n<script src=\"jquery.levelSelector.js\"></script>\r\n```\r\n### 2. 数据脚本格式\r\n\r\n我们简单使用一些数据来填充使用（并非一定需要使用当前格式后面详细介绍使用）。\r\n``` javascipt\r\nvar data = {\r\n     id_0: [{ Id: 1, Name: '服装' }, { Id: 2, Name: '鞋包' }],\r\n     id_1: [{ Id: 3, Name: '男装' }, { Id: 4, Name: '女装' }],\r\n     id_2: [{ Id: 5, Name: '男鞋' }, { Id: 6, Name: '女鞋' }, { Id: 7, Name: '箱包' }],\r\n     id_3: [{ Id: 8, Name: '男式上装' }, { Id: 9, Name: '男式裤子' }],\r\n     id_4: [{ Id: 7, Name: '女式裙子' }, { Id: 8, Name: '女式裤子' }]\r\n}\r\n```\r\n数据格式，`id_0` 节点是所有节点的根分类。根分类下有 `服装`、`鞋包`。服装的 `Id`为 1 则服装的子分类`key`为 id_1，服装下有 `男装`、`女装`。以此类推。\r\n### 3. 调用插件\r\n``` html\r\n<!-- 用一个div 存储结果-->\r\n<div id=\"show\"></div>\r\n<div class=\"levelSelector\"></div>\r\n<script type=\"text/javascript\">\r\n    $(\".levelSelector\").levelSelector({\r\n        //select 值修改后触发此回调方法 \r\n        change: function (v) {\r\n           $(\"#show\").text(v.join());\r\n         },\r\n         //数据提供回调方法\r\n         provider: function (params, url, callback) {\r\n             var id = params[params.length - 1];\r\n             callback(data[\"id_\" + id]);\r\n         }\r\n     });\r\n</script>\r\n```\r\n### 4. 查看demo\r\n\r\n[点击查看 DEMO](http://seamys.github.io/levelSelector/example/getting-started.html)\r\n\r\n![image](http://images2015.cnblogs.com/blog/329473/201603/329473-20160324114331042-385521810.gif)\r\n\r\n## 参数说明\r\n\r\n\r\n*`url(string)`* : 在异步工作下，插件通过此URL获取相应分类子分类\r\n\r\n*`handel(function)`* : 创建select内option时将调用此方法,当您无法控制服务器或者数据源格式的时可以重写此方法。\r\n\r\n*`path(string)`* : 在页面初始化时,指定此参数可以初始化选中的select值。例如：`0,2,38,65`,\r\n\r\n*`sChar(string)`* : 用于指定拆分 path的字符。 默认 \"`,`\"\r\n\r\n*`create(function)`* : 创建 `select` 时调用，回调方法必须返回一个jQuery select 对象。\r\n\r\n*`filter(function)`* : 方法在 provider方法执行后调用，负责对数据进行二次过滤。\r\n\r\n*`param(function)`* : 如果你无法控制服务器提供的参数名称时可以调用此方法重写服务器参数。\r\n\r\n*`provider(function)`*: 数据提供者，您可以通过此方法来重写数据提供的方式。\r\n\r\n### 默认参数如下\r\n``` javascipt\r\n\t\t{\r\n            url: \"/levelSelector/list\",\r\n            handel: function (v) {\r\n                return \"<option value=\" + v.Id + \">\" + v.Name + \"</option>\";\r\n            },\r\n            path: 0,\r\n            sChar: ',',\r\n            change: function (arrays) { return arrays; },\r\n            create: function () {\r\n                return $(\"<select>\");\r\n            },\r\n            filter: function (arrays) {\r\n                return arrays;\r\n            },\r\n            param: function (arrays) {\r\n                return { ids: arrays.join(defaults.sChar) };\r\n            },\r\n            provider: function (arrays, callback) {\r\n                $.ajax(defaults.url, {\r\n                    type: 'GET',\r\n                    dataType: \"json\",\r\n                    cache: true,\r\n                    data: defaults.param(arrays || [0]),\r\n                    success: callback\r\n                });\r\n            },\r\n            defOption: '请选择..'\r\n        }\r\n```\r\n## 开发文档\r\n\r\n\r\n## Examples\r\n\r\nhttp://seamys.github.io/levelSelector/example/\r\n\r\n## Release History\r\n\r\n2016年1月30日 0.1.0 Release\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}